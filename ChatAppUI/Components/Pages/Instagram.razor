@page "/instagram"





<PageTitle>Home</PageTitle>



<div class="app-container">
    <nav class="sidebar">
        <div class="sidebar-header">ChatApp</div>
        <div class="chat-list">
            @foreach (var user in users)
            {
                <div class="chat-list-item" @onclick="() => SelectUser(user)">
                    <img src="@user.Avatar" class="chat-list-avatar" alt="@user.Name" />
                    <div class="chat-list-info">
                        <div class="chat-list-name">@user.Name</div>
                    </div>
                </div>
            }
        </div>
    </nav>
    <main class="chat-main">
        <div class="chat-header">@selectedUser?.Name</div>
        <div class="chat-messages">
            @foreach (var message in messages)
            {
                <div class="message @(message.Sender == "User1" ? "message-sent" : "message-received")">
                    <span class="message-content">@message.Content</span>
                </div>
            }
        </div>
        <div class="chat-input-container">
            <input type="text" @bind="messageInput" @onkeydown="HandleKeyDown" placeholder="Type a message..." />
            <button @onclick="SendMessage">Send</button>
        </div>
    </main>
</div>





@code {
    private string messageInput;
    private User selectedUser;
    private List<Message> messages = new List<Message>
    {
        new Message { Sender = "User1", Content = "Hey there!" },
        new Message { Sender = "User2", Content = "Hi! How are youuuuu?" }
    };
    private List<User> users = new List<User>
    {
        new User { Name = "User1", Avatar = "https://www.allkpop.com/upload/2021/03/content/072004/1615165452-lisa.jpg" },
        new User { Name = "User2", Avatar = "https://www.allkpop.com/upload/2021/03/content/072004/1615165452-lisa.jpg" }
    };



    private void SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(messageInput))
        {
            messages.Add(new Message { Sender = "User1", Content = messageInput });
            messageInput = string.Empty;
        }
    }



    private void HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            SendMessage();
        }
    }



    private void SelectUser(User user)
    {
        selectedUser = user;



    }



    private class Message
    {
        public string Sender { get; set; }
        public string Content { get; set; }
    }



    private class User
    {
        public string Name { get; set; }
        public string Avatar { get; set; }
    }
}